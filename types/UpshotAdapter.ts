/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export type UpshotAdapterConstructorArgsStruct = {
  admin: AddressLike;
  protocolFeeReceiver: AddressLike;
};

export type UpshotAdapterConstructorArgsStructOutput = [
  admin: string,
  protocolFeeReceiver: string
] & { admin: string; protocolFeeReceiver: string };

export type TopicConfigStruct = {
  title: string;
  owner: AddressLike;
  totalFee: BigNumberish;
  aggregator: AddressLike;
  ownerSwitchedOn: boolean;
  adminSwitchedOn: boolean;
  feeHandler: AddressLike;
  dataProviderQuorum: BigNumberish;
  dataValiditySeconds: BigNumberish;
};

export type TopicConfigStructOutput = [
  title: string,
  owner: string,
  totalFee: bigint,
  aggregator: string,
  ownerSwitchedOn: boolean,
  adminSwitchedOn: boolean,
  feeHandler: string,
  dataProviderQuorum: bigint,
  dataValiditySeconds: bigint
] & {
  title: string;
  owner: string;
  totalFee: bigint;
  aggregator: string;
  ownerSwitchedOn: boolean;
  adminSwitchedOn: boolean;
  feeHandler: string;
  dataProviderQuorum: bigint;
  dataValiditySeconds: bigint;
};

export type TopicViewStruct = {
  config: TopicConfigStruct;
  validDataProviders: AddressLike[];
};

export type TopicViewStructOutput = [
  config: TopicConfigStructOutput,
  validDataProviders: string[]
] & { config: TopicConfigStructOutput; validDataProviders: string[] };

export type NumericDataStruct = {
  topicId: BigNumberish;
  timestamp: BigNumberish;
  numericValue: BigNumberish;
  extraData: BytesLike;
};

export type NumericDataStructOutput = [
  topicId: bigint,
  timestamp: bigint,
  numericValue: bigint,
  extraData: string
] & {
  topicId: bigint;
  timestamp: bigint;
  numericValue: bigint;
  extraData: string;
};

export type TopicValueStruct = {
  recentValue: BigNumberish;
  recentValueTime: BigNumberish;
};

export type TopicValueStructOutput = [
  recentValue: bigint,
  recentValueTime: bigint
] & { recentValue: bigint; recentValueTime: bigint };

export type SignedNumericDataStruct = {
  signature: BytesLike;
  numericData: NumericDataStruct;
};

export type SignedNumericDataStructOutput = [
  signature: string,
  numericData: NumericDataStructOutput
] & { signature: string; numericData: NumericDataStructOutput };

export type UpshotAdapterNumericDataStruct = {
  signedNumericData: SignedNumericDataStruct[];
  extraData: BytesLike;
};

export type UpshotAdapterNumericDataStructOutput = [
  signedNumericData: SignedNumericDataStructOutput[],
  extraData: string
] & { signedNumericData: SignedNumericDataStructOutput[]; extraData: string };

export interface UpshotAdapterInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "NUMERIC_DATA_TYPEHASH"
      | "acceptOwnership"
      | "addDataProvider"
      | "addTopic"
      | "adminSetProtocolFee"
      | "adminSetProtocolFeeReceiver"
      | "adminTurnOffAdapter"
      | "adminTurnOffTopic"
      | "adminTurnOnAdapter"
      | "adminTurnOnTopic"
      | "eip712Domain"
      | "getMessage"
      | "getTopic"
      | "getTopicValue"
      | "nextTopicId"
      | "owner"
      | "pendingOwner"
      | "protocolFee"
      | "protocolFeeReceiver"
      | "removeDataProvider"
      | "renounceOwnership"
      | "switchedOn"
      | "topicValue"
      | "transferOwnership"
      | "turnOffTopic"
      | "turnOnTopic"
      | "updateAggregator"
      | "updateDataProviderQuorum"
      | "updateDataValiditySeconds"
      | "updateFeeHandler"
      | "updateTopicOwner"
      | "updateTotalFee"
      | "verifyData"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "EIP712DomainChanged"
      | "OwnershipTransferStarted"
      | "OwnershipTransferred"
      | "UpshotAdapterV2AdapterAdminTopicTurnedOff"
      | "UpshotAdapterV2AdapterAdminTopicTurnedOn"
      | "UpshotAdapterV2AdapterAdminTurnedOff"
      | "UpshotAdapterV2AdapterAdminTurnedOn"
      | "UpshotAdapterV2AdapterAdminUpdatedProtocolFee"
      | "UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiver"
      | "UpshotAdapterV2AdapterTopicOwnerAddedDataProvider"
      | "UpshotAdapterV2AdapterTopicOwnerRemovedDataProvider"
      | "UpshotAdapterV2AdapterTopicOwnerTopicTurnedOff"
      | "UpshotAdapterV2AdapterTopicOwnerTopicTurnedOn"
      | "UpshotAdapterV2AdapterTopicOwnerUpdatedAggregator"
      | "UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorum"
      | "UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySeconds"
      | "UpshotAdapterV2AdapterTopicOwnerUpdatedFee"
      | "UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandler"
      | "UpshotAdapterV2AdapterTopicOwnerUpdatedOwner"
      | "UpshotAdapterV2AdapterVerifiedData"
      | "UpshotAdapterV2TopicAdded"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "NUMERIC_DATA_TYPEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "acceptOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addDataProvider",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addTopic",
    values: [TopicViewStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "adminSetProtocolFee",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "adminSetProtocolFeeReceiver",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "adminTurnOffAdapter",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "adminTurnOffTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "adminTurnOnAdapter",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "adminTurnOnTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "eip712Domain",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMessage",
    values: [NumericDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTopicValue",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "nextTopicId",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pendingOwner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "protocolFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "protocolFeeReceiver",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeDataProvider",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "switchedOn",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "topicValue",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "turnOffTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "turnOnTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAggregator",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateDataProviderQuorum",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateDataValiditySeconds",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateFeeHandler",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTopicOwner",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTotalFee",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "verifyData",
    values: [UpshotAdapterNumericDataStruct]
  ): string;

  decodeFunctionResult(
    functionFragment: "NUMERIC_DATA_TYPEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addDataProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addTopic", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "adminSetProtocolFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminSetProtocolFeeReceiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminTurnOffAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminTurnOffTopic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminTurnOnAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminTurnOnTopic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "eip712Domain",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getMessage", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getTopic", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTopicValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nextTopicId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pendingOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protocolFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protocolFeeReceiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeDataProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "switchedOn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "topicValue", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "turnOffTopic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "turnOnTopic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAggregator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateDataProviderQuorum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateDataValiditySeconds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateFeeHandler",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTopicOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTotalFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "verifyData", data: BytesLike): Result;
}

export namespace EIP712DomainChangedEvent {
  export type InputTuple = [];
  export type OutputTuple = [];
  export interface OutputObject {}
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferStartedEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterAdminTopicTurnedOffEvent {
  export type InputTuple = [topicId: BigNumberish];
  export type OutputTuple = [topicId: bigint];
  export interface OutputObject {
    topicId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterAdminTopicTurnedOnEvent {
  export type InputTuple = [topicId: BigNumberish];
  export type OutputTuple = [topicId: bigint];
  export interface OutputObject {
    topicId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterAdminTurnedOffEvent {
  export type InputTuple = [];
  export type OutputTuple = [];
  export interface OutputObject {}
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterAdminTurnedOnEvent {
  export type InputTuple = [];
  export type OutputTuple = [];
  export interface OutputObject {}
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent {
  export type InputTuple = [newProtocolFee: BigNumberish];
  export type OutputTuple = [newProtocolFee: bigint];
  export interface OutputObject {
    newProtocolFee: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent {
  export type InputTuple = [protocolFeeReceiver: AddressLike];
  export type OutputTuple = [protocolFeeReceiver: string];
  export interface OutputObject {
    protocolFeeReceiver: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent {
  export type InputTuple = [topicId: BigNumberish, dataProvider: AddressLike];
  export type OutputTuple = [topicId: bigint, dataProvider: string];
  export interface OutputObject {
    topicId: bigint;
    dataProvider: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent {
  export type InputTuple = [dataProvider: AddressLike];
  export type OutputTuple = [dataProvider: string];
  export interface OutputObject {
    dataProvider: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent {
  export type InputTuple = [topicId: BigNumberish];
  export type OutputTuple = [topicId: bigint];
  export interface OutputObject {
    topicId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent {
  export type InputTuple = [topicId: BigNumberish];
  export type OutputTuple = [topicId: bigint];
  export interface OutputObject {
    topicId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent {
  export type InputTuple = [topicId: BigNumberish, aggregator: AddressLike];
  export type OutputTuple = [topicId: bigint, aggregator: string];
  export interface OutputObject {
    topicId: bigint;
    aggregator: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent {
  export type InputTuple = [
    topicId: BigNumberish,
    dataProviderQuorum: BigNumberish
  ];
  export type OutputTuple = [topicId: bigint, dataProviderQuorum: bigint];
  export interface OutputObject {
    topicId: bigint;
    dataProviderQuorum: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent {
  export type InputTuple = [
    topicId: BigNumberish,
    dataValiditySeconds: BigNumberish
  ];
  export type OutputTuple = [topicId: bigint, dataValiditySeconds: bigint];
  export interface OutputObject {
    topicId: bigint;
    dataValiditySeconds: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent {
  export type InputTuple = [totalFee: BigNumberish];
  export type OutputTuple = [totalFee: bigint];
  export interface OutputObject {
    totalFee: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent {
  export type InputTuple = [topicId: BigNumberish, feeHandler: AddressLike];
  export type OutputTuple = [topicId: bigint, feeHandler: string];
  export interface OutputObject {
    topicId: bigint;
    feeHandler: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent {
  export type InputTuple = [topicId: BigNumberish, newOwner: AddressLike];
  export type OutputTuple = [topicId: bigint, newOwner: string];
  export interface OutputObject {
    topicId: bigint;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2AdapterVerifiedDataEvent {
  export type InputTuple = [
    topicId: BigNumberish,
    numericData: BigNumberish,
    dataProviders: AddressLike[]
  ];
  export type OutputTuple = [
    topicId: bigint,
    numericData: bigint,
    dataProviders: string[]
  ];
  export interface OutputObject {
    topicId: bigint;
    numericData: bigint;
    dataProviders: string[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotAdapterV2TopicAddedEvent {
  export type InputTuple = [topicView: TopicViewStruct];
  export type OutputTuple = [topicView: TopicViewStructOutput];
  export interface OutputObject {
    topicView: TopicViewStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface UpshotAdapter extends BaseContract {
  connect(runner?: ContractRunner | null): UpshotAdapter;
  waitForDeployment(): Promise<this>;

  interface: UpshotAdapterInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  NUMERIC_DATA_TYPEHASH: TypedContractMethod<[], [string], "view">;

  acceptOwnership: TypedContractMethod<[], [void], "nonpayable">;

  addDataProvider: TypedContractMethod<
    [topicId: BigNumberish, dataProvider: AddressLike],
    [void],
    "nonpayable"
  >;

  addTopic: TypedContractMethod<
    [topicView: TopicViewStruct],
    [bigint],
    "nonpayable"
  >;

  adminSetProtocolFee: TypedContractMethod<
    [protocolFee_: BigNumberish],
    [void],
    "nonpayable"
  >;

  adminSetProtocolFeeReceiver: TypedContractMethod<
    [protocolFeeReceiver_: AddressLike],
    [void],
    "nonpayable"
  >;

  adminTurnOffAdapter: TypedContractMethod<[], [void], "nonpayable">;

  adminTurnOffTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [void],
    "nonpayable"
  >;

  adminTurnOnAdapter: TypedContractMethod<[], [void], "nonpayable">;

  adminTurnOnTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [void],
    "nonpayable"
  >;

  eip712Domain: TypedContractMethod<
    [],
    [
      [string, string, string, bigint, string, string, bigint[]] & {
        fields: string;
        name: string;
        version: string;
        chainId: bigint;
        verifyingContract: string;
        salt: string;
        extensions: bigint[];
      }
    ],
    "view"
  >;

  getMessage: TypedContractMethod<
    [numericData: NumericDataStruct],
    [string],
    "view"
  >;

  getTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [TopicViewStructOutput],
    "view"
  >;

  getTopicValue: TypedContractMethod<
    [topicId: BigNumberish, extraData: BytesLike],
    [TopicValueStructOutput],
    "view"
  >;

  nextTopicId: TypedContractMethod<[], [bigint], "view">;

  owner: TypedContractMethod<[], [string], "view">;

  pendingOwner: TypedContractMethod<[], [string], "view">;

  protocolFee: TypedContractMethod<[], [bigint], "view">;

  protocolFeeReceiver: TypedContractMethod<[], [string], "view">;

  removeDataProvider: TypedContractMethod<
    [topicId: BigNumberish, dataProvider: AddressLike],
    [void],
    "nonpayable"
  >;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  switchedOn: TypedContractMethod<[], [boolean], "view">;

  topicValue: TypedContractMethod<
    [topicId: BigNumberish, extraData: BytesLike],
    [[bigint, bigint] & { recentValue: bigint; recentValueTime: bigint }],
    "view"
  >;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  turnOffTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [void],
    "nonpayable"
  >;

  turnOnTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [void],
    "nonpayable"
  >;

  updateAggregator: TypedContractMethod<
    [topicId: BigNumberish, aggregator: AddressLike],
    [void],
    "nonpayable"
  >;

  updateDataProviderQuorum: TypedContractMethod<
    [topicId: BigNumberish, dataProviderQuorum: BigNumberish],
    [void],
    "nonpayable"
  >;

  updateDataValiditySeconds: TypedContractMethod<
    [topicId: BigNumberish, dataValiditySeconds: BigNumberish],
    [void],
    "nonpayable"
  >;

  updateFeeHandler: TypedContractMethod<
    [topicId: BigNumberish, feeHandler: AddressLike],
    [void],
    "nonpayable"
  >;

  updateTopicOwner: TypedContractMethod<
    [topicId: BigNumberish, owner_: AddressLike],
    [void],
    "nonpayable"
  >;

  updateTotalFee: TypedContractMethod<
    [topicId: BigNumberish, totalFee: BigNumberish],
    [void],
    "nonpayable"
  >;

  verifyData: TypedContractMethod<
    [nd: UpshotAdapterNumericDataStruct],
    [bigint],
    "payable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "NUMERIC_DATA_TYPEHASH"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "acceptOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addDataProvider"
  ): TypedContractMethod<
    [topicId: BigNumberish, dataProvider: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "addTopic"
  ): TypedContractMethod<[topicView: TopicViewStruct], [bigint], "nonpayable">;
  getFunction(
    nameOrSignature: "adminSetProtocolFee"
  ): TypedContractMethod<[protocolFee_: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "adminSetProtocolFeeReceiver"
  ): TypedContractMethod<
    [protocolFeeReceiver_: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "adminTurnOffAdapter"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "adminTurnOffTopic"
  ): TypedContractMethod<[topicId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "adminTurnOnAdapter"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "adminTurnOnTopic"
  ): TypedContractMethod<[topicId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "eip712Domain"
  ): TypedContractMethod<
    [],
    [
      [string, string, string, bigint, string, string, bigint[]] & {
        fields: string;
        name: string;
        version: string;
        chainId: bigint;
        verifyingContract: string;
        salt: string;
        extensions: bigint[];
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "getMessage"
  ): TypedContractMethod<[numericData: NumericDataStruct], [string], "view">;
  getFunction(
    nameOrSignature: "getTopic"
  ): TypedContractMethod<
    [topicId: BigNumberish],
    [TopicViewStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getTopicValue"
  ): TypedContractMethod<
    [topicId: BigNumberish, extraData: BytesLike],
    [TopicValueStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "nextTopicId"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "pendingOwner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "protocolFee"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "protocolFeeReceiver"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "removeDataProvider"
  ): TypedContractMethod<
    [topicId: BigNumberish, dataProvider: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "renounceOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "switchedOn"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "topicValue"
  ): TypedContractMethod<
    [topicId: BigNumberish, extraData: BytesLike],
    [[bigint, bigint] & { recentValue: bigint; recentValueTime: bigint }],
    "view"
  >;
  getFunction(
    nameOrSignature: "transferOwnership"
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "turnOffTopic"
  ): TypedContractMethod<[topicId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "turnOnTopic"
  ): TypedContractMethod<[topicId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "updateAggregator"
  ): TypedContractMethod<
    [topicId: BigNumberish, aggregator: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateDataProviderQuorum"
  ): TypedContractMethod<
    [topicId: BigNumberish, dataProviderQuorum: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateDataValiditySeconds"
  ): TypedContractMethod<
    [topicId: BigNumberish, dataValiditySeconds: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateFeeHandler"
  ): TypedContractMethod<
    [topicId: BigNumberish, feeHandler: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateTopicOwner"
  ): TypedContractMethod<
    [topicId: BigNumberish, owner_: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateTotalFee"
  ): TypedContractMethod<
    [topicId: BigNumberish, totalFee: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "verifyData"
  ): TypedContractMethod<
    [nd: UpshotAdapterNumericDataStruct],
    [bigint],
    "payable"
  >;

  getEvent(
    key: "EIP712DomainChanged"
  ): TypedContractEvent<
    EIP712DomainChangedEvent.InputTuple,
    EIP712DomainChangedEvent.OutputTuple,
    EIP712DomainChangedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferStarted"
  ): TypedContractEvent<
    OwnershipTransferStartedEvent.InputTuple,
    OwnershipTransferStartedEvent.OutputTuple,
    OwnershipTransferStartedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred"
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterAdminTopicTurnedOff"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterAdminTopicTurnedOffEvent.InputTuple,
    UpshotAdapterV2AdapterAdminTopicTurnedOffEvent.OutputTuple,
    UpshotAdapterV2AdapterAdminTopicTurnedOffEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterAdminTopicTurnedOn"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterAdminTopicTurnedOnEvent.InputTuple,
    UpshotAdapterV2AdapterAdminTopicTurnedOnEvent.OutputTuple,
    UpshotAdapterV2AdapterAdminTopicTurnedOnEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterAdminTurnedOff"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterAdminTurnedOffEvent.InputTuple,
    UpshotAdapterV2AdapterAdminTurnedOffEvent.OutputTuple,
    UpshotAdapterV2AdapterAdminTurnedOffEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterAdminTurnedOn"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterAdminTurnedOnEvent.InputTuple,
    UpshotAdapterV2AdapterAdminTurnedOnEvent.OutputTuple,
    UpshotAdapterV2AdapterAdminTurnedOnEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterAdminUpdatedProtocolFee"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent.InputTuple,
    UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent.OutputTuple,
    UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiver"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent.InputTuple,
    UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent.OutputTuple,
    UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerAddedDataProvider"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerRemovedDataProvider"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerTopicTurnedOff"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerTopicTurnedOn"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerUpdatedAggregator"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorum"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySeconds"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerUpdatedFee"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandler"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterTopicOwnerUpdatedOwner"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent.InputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent.OutputTuple,
    UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2AdapterVerifiedData"
  ): TypedContractEvent<
    UpshotAdapterV2AdapterVerifiedDataEvent.InputTuple,
    UpshotAdapterV2AdapterVerifiedDataEvent.OutputTuple,
    UpshotAdapterV2AdapterVerifiedDataEvent.OutputObject
  >;
  getEvent(
    key: "UpshotAdapterV2TopicAdded"
  ): TypedContractEvent<
    UpshotAdapterV2TopicAddedEvent.InputTuple,
    UpshotAdapterV2TopicAddedEvent.OutputTuple,
    UpshotAdapterV2TopicAddedEvent.OutputObject
  >;

  filters: {
    "EIP712DomainChanged()": TypedContractEvent<
      EIP712DomainChangedEvent.InputTuple,
      EIP712DomainChangedEvent.OutputTuple,
      EIP712DomainChangedEvent.OutputObject
    >;
    EIP712DomainChanged: TypedContractEvent<
      EIP712DomainChangedEvent.InputTuple,
      EIP712DomainChangedEvent.OutputTuple,
      EIP712DomainChangedEvent.OutputObject
    >;

    "OwnershipTransferStarted(address,address)": TypedContractEvent<
      OwnershipTransferStartedEvent.InputTuple,
      OwnershipTransferStartedEvent.OutputTuple,
      OwnershipTransferStartedEvent.OutputObject
    >;
    OwnershipTransferStarted: TypedContractEvent<
      OwnershipTransferStartedEvent.InputTuple,
      OwnershipTransferStartedEvent.OutputTuple,
      OwnershipTransferStartedEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterAdminTopicTurnedOff(uint256)": TypedContractEvent<
      UpshotAdapterV2AdapterAdminTopicTurnedOffEvent.InputTuple,
      UpshotAdapterV2AdapterAdminTopicTurnedOffEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminTopicTurnedOffEvent.OutputObject
    >;
    UpshotAdapterV2AdapterAdminTopicTurnedOff: TypedContractEvent<
      UpshotAdapterV2AdapterAdminTopicTurnedOffEvent.InputTuple,
      UpshotAdapterV2AdapterAdminTopicTurnedOffEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminTopicTurnedOffEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterAdminTopicTurnedOn(uint256)": TypedContractEvent<
      UpshotAdapterV2AdapterAdminTopicTurnedOnEvent.InputTuple,
      UpshotAdapterV2AdapterAdminTopicTurnedOnEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminTopicTurnedOnEvent.OutputObject
    >;
    UpshotAdapterV2AdapterAdminTopicTurnedOn: TypedContractEvent<
      UpshotAdapterV2AdapterAdminTopicTurnedOnEvent.InputTuple,
      UpshotAdapterV2AdapterAdminTopicTurnedOnEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminTopicTurnedOnEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterAdminTurnedOff()": TypedContractEvent<
      UpshotAdapterV2AdapterAdminTurnedOffEvent.InputTuple,
      UpshotAdapterV2AdapterAdminTurnedOffEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminTurnedOffEvent.OutputObject
    >;
    UpshotAdapterV2AdapterAdminTurnedOff: TypedContractEvent<
      UpshotAdapterV2AdapterAdminTurnedOffEvent.InputTuple,
      UpshotAdapterV2AdapterAdminTurnedOffEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminTurnedOffEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterAdminTurnedOn()": TypedContractEvent<
      UpshotAdapterV2AdapterAdminTurnedOnEvent.InputTuple,
      UpshotAdapterV2AdapterAdminTurnedOnEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminTurnedOnEvent.OutputObject
    >;
    UpshotAdapterV2AdapterAdminTurnedOn: TypedContractEvent<
      UpshotAdapterV2AdapterAdminTurnedOnEvent.InputTuple,
      UpshotAdapterV2AdapterAdminTurnedOnEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminTurnedOnEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterAdminUpdatedProtocolFee(uint256)": TypedContractEvent<
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent.InputTuple,
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent.OutputObject
    >;
    UpshotAdapterV2AdapterAdminUpdatedProtocolFee: TypedContractEvent<
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent.InputTuple,
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiver(address)": TypedContractEvent<
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent.InputTuple,
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent.OutputObject
    >;
    UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiver: TypedContractEvent<
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent.InputTuple,
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent.OutputTuple,
      UpshotAdapterV2AdapterAdminUpdatedProtocolFeeReceiverEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerAddedDataProvider(uint256,address)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerAddedDataProvider: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerAddedDataProviderEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerRemovedDataProvider(address)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerRemovedDataProvider: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerRemovedDataProviderEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerTopicTurnedOff(uint256)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerTopicTurnedOff: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOffEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerTopicTurnedOn(uint256)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerTopicTurnedOn: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerTopicTurnedOnEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerUpdatedAggregator(uint256,address)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerUpdatedAggregator: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedAggregatorEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorum(uint256,uint48)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorum: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataProviderQuorumEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySeconds(uint256,uint48)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySeconds: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedDataValiditySecondsEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerUpdatedFee(uint128)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerUpdatedFee: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandler(uint256,address)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandler: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedFeeHandlerEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterTopicOwnerUpdatedOwner(uint256,address)": TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent.OutputObject
    >;
    UpshotAdapterV2AdapterTopicOwnerUpdatedOwner: TypedContractEvent<
      UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent.InputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent.OutputTuple,
      UpshotAdapterV2AdapterTopicOwnerUpdatedOwnerEvent.OutputObject
    >;

    "UpshotAdapterV2AdapterVerifiedData(uint256,uint256,address[])": TypedContractEvent<
      UpshotAdapterV2AdapterVerifiedDataEvent.InputTuple,
      UpshotAdapterV2AdapterVerifiedDataEvent.OutputTuple,
      UpshotAdapterV2AdapterVerifiedDataEvent.OutputObject
    >;
    UpshotAdapterV2AdapterVerifiedData: TypedContractEvent<
      UpshotAdapterV2AdapterVerifiedDataEvent.InputTuple,
      UpshotAdapterV2AdapterVerifiedDataEvent.OutputTuple,
      UpshotAdapterV2AdapterVerifiedDataEvent.OutputObject
    >;

    "UpshotAdapterV2TopicAdded(tuple)": TypedContractEvent<
      UpshotAdapterV2TopicAddedEvent.InputTuple,
      UpshotAdapterV2TopicAddedEvent.OutputTuple,
      UpshotAdapterV2TopicAddedEvent.OutputObject
    >;
    UpshotAdapterV2TopicAdded: TypedContractEvent<
      UpshotAdapterV2TopicAddedEvent.InputTuple,
      UpshotAdapterV2TopicAddedEvent.OutputTuple,
      UpshotAdapterV2TopicAddedEvent.OutputObject
    >;
  };
}
